{"version":3,"sources":["elements.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Button","_PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","inherits","createClass","key","value","react_default","a","createElement","style","props","css","backgroundColor","borderRadius","fontFamily","className","onClick","handleClick","name","map","document","querySelectorAll","el","MDCRipple","PureComponent","Checkbox","_PureComponent2","_getPrototypeOf3","_this2","_len2","_key2","type","id","viewBox","fill","d","MDCCheckbox","InputField","_PureComponent3","_getPrototypeOf4","_this3","_len3","_key3","_this4","ref","node","input","text","MDCTextField","Card","_PureComponent5","height","width","boxShadow","src","alt","Login","console","log","emailLogin","password","elements_InputField","textDecoration","color","marginBottom","href","borderBottom","fontSize","react_router_dom","to","elements_Button","Signup","marginLeft","elements_Checkbox","marginTop","Main","border","elements_Card","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","react_router","path","component","exact","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6a15a25.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { MDCRipple } from \"@material/ripple\";\nimport { MDCCheckbox } from \"@material/checkbox\";\nimport { MDCTextField } from \"@material/textfield\";\nimport { MDCChipSet } from \"@material/chips\";\n\nexport class Button extends PureComponent {\n  state = {};\n  render() {\n    return (\n      <div style={this.props.css}>\n        <button\n          style={{\n            backgroundColor: \"#377dff\",\n            borderRadius: 4,\n            fontFamily: \"Poppins\"\n          }}\n          className=\"mdc-button mdc-button--unelevated --mdc-theme-secondary\"\n          onClick={this.props.handleClick}\n        >\n          <span className=\"mdc-button__label\">{this.props.name}</span>\n        </button>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    [].map.call(document.querySelectorAll(\".mdc-button\"), function(el) {\n      return new MDCRipple(el);\n    });\n  }\n}\n\nexport class Checkbox extends PureComponent {\n  state = {};\n  render() {\n    return (\n      <div>\n        <div className=\"mdc-form-field\">\n          <div className=\"mdc-checkbox\">\n            <input\n              type=\"checkbox\"\n              className=\"mdc-checkbox__native-control\"\n              id=\"checkbox-1\"\n            />\n            <div className=\"mdc-checkbox__background\">\n              <svg className=\"mdc-checkbox__checkmark\" viewBox=\"0 0 24 24\">\n                <path\n                  className=\"mdc-checkbox__checkmark-path\"\n                  fill=\"none\"\n                  d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"\n                />\n              </svg>\n              <div className=\"mdc-checkbox__mixedmark\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    [].map.call(document.querySelectorAll(\".mdc-checkbox\"), function(el) {\n      return new MDCCheckbox(el);\n    });\n  }\n}\n\nexport class InputField extends PureComponent {\n  state = {};\n  render() {\n    return (\n      <div>\n        <div className=\"mdc-text-field mdc-text-field--outlined mdc-theme--secondary\">\n          <input\n            ref={node => {\n              this.input = node;\n            }}\n            type={this.props.type}\n            className=\"mdc-text-field__input\"\n          />\n          <div className=\"mdc-notched-outline\">\n            <div className=\"mdc-notched-outline__leading\" />\n            <div className=\"mdc-notched-outline__notch\">\n              <label className=\"mdc-floating-label\">{this.props.text}</label>\n            </div>\n            <div className=\"mdc-notched-outline__trailing\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    [].map.call(document.querySelectorAll(\".mdc-text-field\"), function(el) {\n      return new MDCTextField(el);\n    });\n  }\n}\n\nexport class Chip extends PureComponent {\n  state = {};\n  render() {\n    return (\n      <div>\n        <div className=\"mdc-chip-set\">\n          <div className=\"mdc-chip\" tabIndex=\"0\">\n            <div className=\"mdc-chip__text\">{this.props.name}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    [].map.call(document.querySelectorAll(\".mdc-chip-set\"), function(el) {\n      return new MDCChipSet(el);\n    });\n  }\n}\n\nexport class Card extends PureComponent {\n  render() {\n    return (\n      <div\n        style={{\n          height: \"20em\",\n          width: \"20em\",\n          boxShadow: \"5px 10px #888888\"\n        }}\n        className=\"card\"\n        id=\"water\"\n      >\n        <img\n          className=\"card-img-top\"\n          src=\"https://splatstudio.in/wp-content/uploads/2017/07/Doraemon.png\"\n          alt=\"Card cap\"\n          style={{ height: 200 }}\n        />\n        <div className=\"card-body\"> Some more card content </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport \"./App.scss\";\nimport { Link } from \"react-router-dom\";\nimport { Button, InputField, Checkbox, Card } from \"./elements\";\n\nexport class Login extends PureComponent {\n  state = {};\n  handleClick = () => {\n    console.log(\n      \"Pressed!\",\n      this.emailLogin.input.value,\n      this.password.input.value\n    );\n  };\n  render() {\n    return (\n      <div className=\"body\">\n        <div className=\"container-fluid\">\n          <div className=\"top\">\n            <span className=\"title\">\n              Welcome to <b>CrowdML!</b>\n            </span>\n            <br />\n            <span className=\"text-muted\">Login to manage you account.</span>\n          </div>\n\n          <div className=\"fieldsAndButton\">\n            <div>\n              <InputField\n                ref={node => {\n                  this.emailLogin = node;\n                }}\n                type=\"text\"\n                text=\"Email Address\"\n              />\n            </div>\n            <div>\n              <div className=\"mt-2 link d-flex flex-row-reverse\">\n                <a\n                  className=\"forgotPassword\"\n                  style={{\n                    textDecoration: \"none\",\n                    color: \"grey\",\n                    marginBottom: 4\n                  }}\n                  href=\"http\"\n                >\n                  <span\n                    style={{\n                      borderBottom: 1 + \"px dashed\",\n                      fontSize: 13\n                    }}\n                    className=\"forgotPassword\"\n                  >\n                    Forgot Password?\n                  </span>\n                </a>\n              </div>\n              <InputField\n                ref={node => {\n                  this.password = node;\n                }}\n                type=\"password\"\n                text=\"Password\"\n              />\n            </div>\n            <div className=\"mt-3\">\n              <div className=\"bottom d-flex justify-content-between align-items-center\">\n                <div className=\"signup\" style={{ fontSize: 15 }}>\n                  <span className=\"text-muted\">Don't have an account? </span>\n                  <Link to=\"/signup\">Sign Up</Link>\n                </div>\n                <div className=\"button\">\n                  <Button handleClick={this.handleClick} name=\"Get Started\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport class Signup extends PureComponent {\n  render() {\n    return (\n      <div>\n        <div className=\"body\">\n          <div className=\"container-fluid\">\n            <div className=\"top\">\n              <span className=\"title\">\n                Welcome to <b>CrowdML!</b>\n              </span>{\" \"}\n              <br />\n              <span className=\"m-1 text-muted\">\n                Enter your email to get started.\n              </span>\n            </div>\n            <div className=\"fieldsAndButton\">\n              <div className=\"input\">\n                <InputField text=\"Email Address\" type=\"text\" />\n              </div>\n              <div\n                style={{ marginLeft: -10 }}\n                className=\"mt-2 d-flex align-items-center\"\n              >\n                <Checkbox />\n                <span className=\"text-muted\">\n                  I agree to the{\" \"}\n                  <span style={{ borderBottom: 1 + \"px dashed\" }}>\n                    Terms and Conditions\n                  </span>\n                </span>\n              </div>\n              <div\n                style={{ marginTop: 10 + \"%\" }}\n                className=\"bottom d-flex justify-content-between align-items-center\"\n              >\n                <div>\n                  <span className=\"text-muted\">Already have an account? </span>\n                  <br />\n                  <Link to=\"/\">Login</Link>\n                </div>\n                <div className=\"d-flex flex-row-reverse\">\n                  <Button name=\"Sign Up\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport class Main extends PureComponent {\n  render() {\n    return (\n      <div className=\"container container-fluid\">\n        <nav className=\"navbar fixed-top navbar-light bg-light\">\n          <span className=\"navbar-brand\">\n            <b>Crowdsource</b>\n          </span>\n          <div className=\"d-flex flex-row justify-items-center\">\n            <div className=\"mr-3\">\n              <span style={{ border: \"1px solid black\" }}>Admin</span>\n            </div>\n            <div>\n              <span style={{ border: \"1px solid black\" }}>Moderator</span>\n            </div>\n          </div>\n        </nav>\n        <div className=\"mainPageContent\">\n          <div className=\"d-flex flex-row justify-content-around align-items-center\">\n            <div>\n              <span>What would you like to help with?</span>\n            </div>\n            <div className=\"box\">Box</div>\n          </div>\n          <div className=\"cardsGrid\">\n            <Card />\n            <Card />\n            <Card />\n            <Card />\n            <Card />\n            <Card />\n            <Card />\n            <Card />\n            <Card />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Login, Signup, Main } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.Fragment>\n      <Route path=\"/\" component={Login} exact />\n      <Route path=\"/signup\" component={Signup} />\n      <Route path=\"/main\" component={Main} />\n    </React.Fragment>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}